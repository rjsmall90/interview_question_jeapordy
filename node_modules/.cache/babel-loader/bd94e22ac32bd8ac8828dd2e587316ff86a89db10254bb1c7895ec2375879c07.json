{"ast":null,"code":"var _jsxFileName = \"/Users/rjsmall90/Desktop/interview_question_jeopardy/src/components/cards/answer_card.jsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport card_data from '../../data/card-data';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst answerCard_styles = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(6, 175px)',\n  gridGap: '10px',\n  padding: '10px',\n  textAlign: 'center'\n};\nconst AnswerCard = () => {\n  const categories = card_data.categories;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: answerCard_styles,\n    children: categories.map(category => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: category.answers.map(answers => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              gridColumn: answers.categoryId,\n              gridRow: answers.cardId\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  fontFamily: 'Arial'\n                },\n                children: answers.categoryId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                sx: {\n                  fontFamily: 'Arial'\n                },\n                children: answers.categoryName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this)\n          }, answers.cardId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = AnswerCard;\nexport default AnswerCard;\nvar _c;\n$RefreshReg$(_c, \"AnswerCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","card_data","answerCard_styles","display","gridTemplateColumns","gridGap","padding","textAlign","AnswerCard","categories","map","category","answers","gridColumn","categoryId","gridRow","cardId","fontFamily","categoryName"],"sources":["/Users/rjsmall90/Desktop/interview_question_jeopardy/src/components/cards/answer_card.jsx"],"sourcesContent":["import React from 'react'\nimport { Card, CardContent, Typography } from '@mui/material'\n\nimport card_data from '../../data/card-data'\n\nconst answerCard_styles = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(6, 175px)',\n    gridGap: '10px',\n    padding: '10px',\n    textAlign: 'center',\n}\nconst AnswerCard = () => {\n    const categories = card_data.categories\n    return (\n        <div style={answerCard_styles}>\n            { categories.map((category) => {\n               return (\n                    <>\n                        { category.answers.map((answers) => {\n                            return (\n                                <Card key={answers.cardId} style={{gridColumn: answers.categoryId, gridRow: answers.cardId}}>\n                                    <CardContent>\n                                        <Typography variant='body1' sx={{fontFamily: 'Arial'}}>\n                                            {answers.categoryId}\n                                        </Typography>\n                                        <Typography variant='h4' sx={{fontFamily: 'Arial'}}>\n                                            {answers.categoryName}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            )\n                        } )}\n                    </>\n                )\n            })}\n        </div>     \n    )\n}\n\nexport default AnswerCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAE7D,OAAOC,SAAS,MAAM,sBAAsB;AAAA;AAAA;AAE5C,MAAMC,iBAAiB,GAAG;EACtBC,OAAO,EAAE,MAAM;EACfC,mBAAmB,EAAE,kBAAkB;EACvCC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE;AACf,CAAC;AACD,MAAMC,UAAU,GAAG,MAAM;EACrB,MAAMC,UAAU,GAAGR,SAAS,CAACQ,UAAU;EACvC,oBACI;IAAK,KAAK,EAAEP,iBAAkB;IAAA,UACxBO,UAAU,CAACC,GAAG,CAAEC,QAAQ,IAAK;MAC5B,oBACK;QAAA,UACMA,QAAQ,CAACC,OAAO,CAACF,GAAG,CAAEE,OAAO,IAAK;UAChC,oBACI,QAAC,IAAI;YAAsB,KAAK,EAAE;cAACC,UAAU,EAAED,OAAO,CAACE,UAAU;cAAEC,OAAO,EAAEH,OAAO,CAACI;YAAM,CAAE;YAAA,uBACxF,QAAC,WAAW;cAAA,wBACR,QAAC,UAAU;gBAAC,OAAO,EAAC,OAAO;gBAAC,EAAE,EAAE;kBAACC,UAAU,EAAE;gBAAO,CAAE;gBAAA,UACjDL,OAAO,CAACE;cAAU;gBAAA;gBAAA;gBAAA;cAAA,QACV,eACb,QAAC,UAAU;gBAAC,OAAO,EAAC,IAAI;gBAAC,EAAE,EAAE;kBAACG,UAAU,EAAE;gBAAO,CAAE;gBAAA,UAC9CL,OAAO,CAACM;cAAY;gBAAA;gBAAA;gBAAA;cAAA,QACZ;YAAA;cAAA;cAAA;cAAA;YAAA;UACH,GARPN,OAAO,CAACI,MAAM;YAAA;YAAA;YAAA;UAAA,QASlB;QAEf,CAAC;MAAE,iBACJ;IAEX,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,KA1BKR,UAAU;AA4BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}